<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/bootstrap.min.css'/>
    <link rel='stylesheet' href='/stylesheets/style.css'/>
    <link rel="stylesheet" href="//cdn.datatables.net/plug-ins/be7019ee387/integration/bootstrap/3/dataTables.bootstrap.css"/>
    <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/1.10.0/js/jquery.dataTables.js"></script>
    <script type="text/javascript" src="/javascripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/plug-ins/be7019ee387/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript">

        var socket = io();

        $.fn.serializeObject = function()
        {
            var o = {};
            var a = this.serializeArray();
            $.each(a, function() {
                if (o[this.name] !== undefined) {
                    if (!o[this.name].push) {
                        o[this.name] = [o[this.name]];
                    }
                    o[this.name].push(this.value || '');
                } else {
                    o[this.name] = this.value || '';
                }
            });
            return o;
        };

        $(function() {

            var taskTable = $("#taskTable").DataTable( {
                "order": [[ 2, "desc" ]],
                "columns": [
                    { data: 'name' },
                    { data: 'category' },
                    { data: 'timestamp' },
                    { data: 'completed' }
                ],
                "columnDefs": [ {
                    "targets": 3,
                    //"data": "download_link",
                    "render": function ( data, type, full, meta ) {
                        //console.log(full + ' ' + data);
                        return '<input type="checkbox" name="' + full.rowkey + '" value="' + data + '" ' + (data == "false"? "checked": "") + '/>';
                    }
                }]
            });

            socket.on('alltasks', function (data) {
                //console.log(data);
                console.log('Got all data');

                for(var i = 0; i < data.tasks.length; i++) {
                    var task = data.tasks[i];

                    var rowData = {
                        rowkey: task.RowKey._,
                        name: task.name._,
                        category: task.category._,
                        timestamp: task.Timestamp._,
                        completed: task.completed._
                    };
                    //console.log('new task: ' + JSON.stringify(rowData));
                    taskTable.row.add(rowData).draw();
                }
            });

            $("#taskForm").submit(function(event) {
                event.preventDefault();

                var postData = $(this).serializeObject();
                socket.emit('addtask', postData);

                $("#taskModal").modal('hide');
                return false;
            });

            socket.on('newtask', function(data) {
                console.log('new task: ' + JSON.stringify(data.task));
                var task = data.task;

                var rowData = {
                    rowkey: task.rowkey,
                    name: task.name,
                    category: task.category,
                    timestamp: task.timestamp,
                    completed: task.completed
                };

                taskTable.row.add(rowData).draw();
            });

            $("#taskListForm").on("change", "input[type=checkbox]", function(e) {

                console.log(this.name+' '+this.value+' '+this.checked);

                //emit socket to server
                socket.emit('completetask', this.name);
            });

            socket.on('taskcompleted', function(data) {
                console.log('completed task key: ' + data.rowkey);
                var allData = taskTable.data();
                var idx = -1;
                for(var i = 0; i < allData.length; i++) {
                    if (allData[i].rowkey === data.rowkey) {
                        idx = i;
                        break;
                    }
                }

                if (idx > -1) {
                    var selRow = taskTable.row(idx);
                    selRow.remove().draw();
                }
            });
        });

    </script>
</head>
<body>

<div class="container">
    <h1><%= title %></h1>
    <button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#taskModal">
        New Task
    </button>
    <br/><br/>
    <form id="taskListForm">
        <table class="table table-striped table-bordered" id="taskTable">
            <thead>
            <tr>
                <td>Name</td>
                <td>Category</td>
                <td>Date</td>
                <td>Completed</td>
            </tr>
            </thead>
            <!--<tr>-->
                <!--<td colspan="4">Loading...</td>-->
            <!--</tr>-->
        </table>
    </form>

    <div class="modal fade" id="taskModal" tabindex="-1" role="dialog" aria-labelledby="taskModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">New Task</h4>
                </div>
                <div class="modal-body">
                    <form accept-charset="UTF-8" role="form" id="taskForm" method="post" action="/realtime/addtask">
                        <fieldset>
                            <div class="form-group">
                                <input class="form-control" placeholder="Task" name="name" type="text">
                            </div>
                            <div class="form-group">
                                <input class="form-control" placeholder="Category" name="category" type="text">
                            </div>
                            <button class="btn btn-lg btn-success btn-block" type="submit" id="buttonSubmit">
                                Submit
                            </button>
                        </fieldset>
                    </form>
                </div>
                <!--
                <div class="modal-footer">
                </div>
                 -->
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
</div>
</body>
</html>
